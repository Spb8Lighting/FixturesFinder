	</div>
</div>

<script>
	const electron = require('electron')
	,	remote = electron.remote
	,	ipcRenderer = electron.ipcRenderer
	,	Icon = { max : '&#128470;', min : '&#128471;'}
	,	$btn = { min : document.getElementById('min-btn'), max : document.getElementById('max-btn'), close : document.getElementById('close-btn')}
	,	$aLink = document.querySelectorAll('aside a')
	,	$h1	= document.querySelector('h1>span')
	,	$MainContent = document.getElementById('maincontent')

	/* Button Windows management */
	$btn.min.addEventListener('click', e => {
		e.preventDefault()
		let window = remote.getCurrentWindow()
		window.minimize()
	})

	$btn.max.addEventListener('click', e => {
		e.preventDefault()
		let window = remote.getCurrentWindow()
		if (!window.isMaximized()) {
			window.maximize()
			$btn.max.innerHTML = Icon.min
		} else {
			window.unmaximize()
			$btn.max.innerHTML = Icon.max
		}
	})

	$btn.close.addEventListener('click', e => {
		e.preventDefault()
		let window = remote.getCurrentWindow()
		window.close()
	})

	/* Navigation management */
	$aLink.forEach(elem => {
		elem.addEventListener('click', e => {
			e.preventDefault()
			ipcRenderer.send('pageChange', {page : elem.getAttribute('href')})		// Request new page content
			$aLink.forEach(elem => {												// Remove .active on links
				elem.classList.remove('active')
			})
			elem.classList.add('active')
			document.activeElement && document.activeElement.blur() 				// Remove :active on link
		})
	})

	ipcRenderer.on('pageChange', (e, data) => {
		$MainContent.innerHTML = data.page
		$h1.innerHTML = `Fixtures Finder/${data.PageName} - v0.0.2`
	})

</script>
